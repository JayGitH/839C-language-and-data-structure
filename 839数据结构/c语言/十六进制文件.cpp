/*从文件中读入16个字符，或不足16个读到EOF，存在数组unsigned char msg[]当中，保存读取本行的长度为N，在N=16时说明此行未读完，下一行可能还有。每行里先输出第一栏偏移量bias,再输出N个读出字符的十六进制数，再输出对应字符值。若此行不到16个字符，则输出第2栏后要输出(16-N)*3个空格进行第三栏的对齐，并且输出第三栏之后退出循环，不再读入字符。则结束程序。
*/
#include <stdio.h>

int main(void)
{
	int i, N, bias=0;
	unsigned char msg[16];
	FILE *fp=fopen("dataIN","r");/*文件名，可读模式，为文件指针赋值*/
	while(1){
	    for(i = 0;i < 16;i++)
	    {
	        if(fscanf(fp, "%c", &msg[i])==EOF)/*将从文件里读到的字符，赋值给msg[i]*/
	            break;/*如果读取转换失败或者出错，那么就退出for循环*/
	            /*应对文件末尾*/
	    }
	    N=i;/*记录正确读入的数组元素个数，如未由break跳出for循环，则N==16*/
	    printf("%08x ", bias);/*无符号8位16进制数*/
	    bias += 0x10;/*16进制的10，显示与文件头的偏移量，而每一行输出16个字节值，那么
		每输出一次就偏移文件头16个字节位置，偏移量为16*/
	    for(i = 0;i < N;i++)
	        printf("%02x ", msg[i]);/*将保存的字符，以2位16进制的形式输出*/
	    if(N < 16)
	        for(i = 0;i < 16-N;i++)
	            printf("   ");/*输出不足16个时，补上3个空格以与其他行对齐*/
	    for(i = 0;i < N;i++)
	    {
	        if(0x20 <= msg[i] && msg[i] <= 126)
	            printf("%c", msg[i]);/*可显示字符的ascⅡ码为32到126*/
	        else
	            printf(".");
	    }
	    printf("\n");
	    if(N<16)/*遇到读不满，应该是到了文件的结尾*/
	        break;
 	}
 	return 0;
}
